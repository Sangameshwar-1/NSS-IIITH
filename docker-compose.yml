services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: nss-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: nss_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  # Backend API Service (Single instance for development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: nss-backend-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/nss_db?authSource=admin
      - API_ENV=development
      - API_PORT=8000
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/venv
    networks:
      - app-network
  
  # Frontend Service (Single instance for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nss-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # Nginx Reverse Proxy & Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nss-nginx-dev
    restart: unless-stopped
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  # Redis for session management and caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: nss-redis-dev
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network

volumes:
  mongodb_data:
  redis_data:

networks:
  app-network:
    driver: bridge
